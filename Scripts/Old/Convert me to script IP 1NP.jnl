# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(name='MM')
mdb.models['MM'].ConstrainedSketch(name='MatrixSketch', sheetSize=200.0)
mdb.models['MM'].sketches['MatrixSketch'].rectangle(point1=(0.0, 0.0), point2=(
    1.0, 1.0))
mdb.models['MM'].Part(dimensionality=TWO_D_PLANAR, name='MatrixPart', type=
    DEFORMABLE_BODY)
mdb.models['MM'].parts['MatrixPart'].BaseShell(sketch=
    mdb.models['MM'].sketches['MatrixSketch'])
mdb.models['MM'].ConstrainedSketch(name='NPSketch', sheetSize=200.0)
mdb.models['MM'].sketches['NPSketch'].rectangle(point1=(0.14645, 0.46464), 
    point2=(0.85355, 0.5355))
mdb.models['MM'].Part(dimensionality=TWO_D_PLANAR, name='NPPart', type=
    DEFORMABLE_BODY)
mdb.models['MM'].parts['NPPart'].BaseShell(sketch=
    mdb.models['MM'].sketches['NPSketch'])
mdb.models['MM'].ConstrainedSketch(name='IPSketch', sheetSize=200.0)
mdb.models['MM'].sketches['IPSketch'].rectangle(point1=(0.1375925, 0.4557825), 
    point2=(0.8624075, 0.5443575))
mdb.models['MM'].Part(dimensionality=TWO_D_PLANAR, name='IPPart', type=
    DEFORMABLE_BODY)
mdb.models['MM'].parts['IPPart'].BaseShell(sketch=
    mdb.models['MM'].sketches['IPSketch'])
mdb.models['MM'].Material(name='MatrixMat')
mdb.models['MM'].materials['MatrixMat'].Diffusivity(table=((1.0, 0.0), ))
mdb.models['MM'].materials['MatrixMat'].Solubility(table=((1.0, ), ))
mdb.models['MM'].Material(name='NPMat')
mdb.models['MM'].materials['NPMat'].Diffusivity(table=((0.0, 0.0), ))
mdb.models['MM'].materials['NPMat'].Solubility(table=((1.0, ), ))
mdb.models['MM'].Material(name='IPMat')
mdb.models['MM'].materials['IPMat'].Diffusivity(table=((0.1, 0.0), ))
mdb.models['MM'].materials['IPMat'].Solubility(table=((1.0, ), ))
mdb.models['MM'].HomogeneousSolidSection(material='MatrixMat', name='MatSec', 
    thickness=None)
mdb.models['MM'].parts['MatrixPart'].Set(faces=
    mdb.models['MM'].parts['MatrixPart'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['MM'].parts['MatrixPart'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['MM'].parts['MatrixPart'].sets['Set-1'], sectionName='MatSec')
mdb.models['MM'].HomogeneousSolidSection(material='NPMat', name='NPSec', 
    thickness=None)
mdb.models['MM'].parts['NPPart'].Set(faces=
    mdb.models['MM'].parts['NPPart'].faces.getSequenceFromMask(('[#1]', ), ), 
    name='Set-1')
mdb.models['MM'].parts['NPPart'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['MM'].parts['NPPart'].sets['Set-1'], sectionName='NPSec')
mdb.models['MM'].HomogeneousSolidSection(material='IPMat', name='IPSec', 
    thickness=None)
mdb.models['MM'].parts['MatrixPart'].Set(faces=
    mdb.models['MM'].parts['MatrixPart'].faces.getSequenceFromMask(('[#1]', ), 
    ), name='Set-1')
mdb.models['MM'].parts['IPPart'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['MM'].parts['MatrixPart'].sets['Set-1'], sectionName='IPSec')
mdb.models['MM'].rootAssembly.Instance(dependent=OFF, name='MatrixPart-1', 
    part=mdb.models['MM'].parts['MatrixPart'])
mdb.models['MM'].rootAssembly.Instance(dependent=OFF, name='NPPart-1', part=
    mdb.models['MM'].parts['NPPart'])
mdb.models['MM'].rootAssembly.Instance(dependent=OFF, name='IPPart-1', part=
    mdb.models['MM'].parts['IPPart'])
mdb.models['MM'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=(mdb.models['MM'].rootAssembly.instances['MatrixPart-1'], 
    mdb.models['MM'].rootAssembly.instances['NPPart-1'], 
    mdb.models['MM'].rootAssembly.instances['IPPart-1']), keepIntersections=ON, 
    name='NCPI', originalInstances=SUPPRESS)
mdb.models['MM'].rootAssembly.makeIndependent(instances=(
    mdb.models['MM'].rootAssembly.instances['NCPI-1'], ))
mdb.models['MM'].parts['NCPI'].Set(faces=
    mdb.models['MM'].parts['NCPI'].faces.getSequenceFromMask(('[#2]', ), ), 
    name='Set-2')
mdb.models['MM'].parts['NCPI'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['MM'].parts['NCPI'].sets['Set-2'], sectionName='MatSec', 
    thicknessAssignment=FROM_SECTION)
mdb.models['MM'].parts['NCPI'].Set(faces=
    mdb.models['MM'].parts['NCPI'].faces.getSequenceFromMask(('[#1]', ), ), 
    name='Set-3')
mdb.models['MM'].parts['NCPI'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['MM'].parts['NCPI'].sets['Set-3'], sectionName='NPSec', 
    thicknessAssignment=FROM_SECTION)
mdb.models['MM'].parts['NCPI'].Set(faces=
    mdb.models['MM'].parts['NCPI'].faces.getSequenceFromMask(('[#4]', ), ), 
    name='Set-4')
mdb.models['MM'].parts['NCPI'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['MM'].parts['NCPI'].sets['Set-4'], sectionName='IPSec', 
    thicknessAssignment=FROM_SECTION)
mdb.models['MM'].rootAssembly.regenerate()
mdb.models['MM'].MassDiffusionStep(amplitude=RAMP, name='Step-1', previous=
    'Initial', response=STEADY_STATE, timePeriod=1)
mdb.models['MM'].FieldOutputRequest(createStepName='Step-1', name='F-Output-2', 
    variables=('IVOL', ))
mdb.models['MM'].rootAssembly.Set(edges=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].edges.getSequenceFromMask(
    mask=('[#800 ]', ), ), name='Left_Edge_Set')
mdb.models['MM'].rootAssembly.Set(edges=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].edges.getSequenceFromMask(
    mask=('[#200 ]', ), ), name='Right_Edge_Set')
mdb.models['MM'].rootAssembly.Set(edges=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].edges.getSequenceFromMask(
    mask=('[#400 ]', ), ), name='Top_Edge_Set')
mdb.models['MM'].rootAssembly.Set(edges=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ), name='Bottom_Edge_Set')
mdb.models['MM'].ConcentrationBC(createStepName='Step-1', distributionType=
    UNIFORM, magnitude=1.0, name='BC1', region=
    mdb.models['MM'].rootAssembly.sets['Top_Edge_Set'])
mdb.models['MM'].ConcentrationBC(createStepName='Step-1', distributionType=
    UNIFORM, magnitude=0.0, name='BC2', region=
    mdb.models['MM'].rootAssembly.sets['Bottom_Edge_Set'])
mdb.models['MM'].rootAssembly.makeIndependent(instances=(
    mdb.models['MM'].rootAssembly.instances['NCPI-1'], ))
mdb.models['MM'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['MM'].rootAssembly.instances['NCPI-1'], ), size=0.05)
mdb.models['MM'].rootAssembly.generateMesh(regions=(
    mdb.models['MM'].rootAssembly.instances['NCPI-1'], ))
mdb.models['MM'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=DC2D4, elemLibrary=STANDARD), ), regions=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].sets['Set-1'])
	
	
	
	
	
	
	
	
	
mdb.models['MM'].rootAssembly.deleteMesh(regions=(
    mdb.models['MM'].rootAssembly.instances['NCPI-1'], ))
	
mdb.models['MM'].ConstrainedSketch(gridSpacing=0.07, name='__profile__', 
    sheetSize=2.82, transform=
    mdb.models['MM'].rootAssembly.MakeSketchTransform(
    sketchPlane=mdb.models['MM'].rootAssembly.instances['NCPI-1'].faces[2], 
    sketchPlaneSide=SIDE1, sketchOrientation=RIGHT, origin=(0.5, 0.499995, 
    0.0)))
	
mdb.models['MM'].rootAssembly.projectReferencesOntoSketch(filter=COPLANAR_EDGES
    , sketch=mdb.models['MM'].sketches['__profile__'])
	
mdb.models['MM'].sketches['__profile__'].Line(point1=(-0.3624075, 0.0443625), 
    point2=(-0.5, 0.0443625))
	
mdb.models['MM'].sketches['__profile__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['MM'].sketches['__profile__'].geometry[22])
mdb.models['MM'].sketches['__profile__'].ParallelConstraint(addUndoState=False, 
    entity1=mdb.models['MM'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['MM'].sketches['__profile__'].geometry[22])
	
mdb.models['MM'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].vertices[12], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[21])
mdb.models['MM'].sketches['__profile__'].Line(point1=(-0.3624075, -0.0442125), 
    point2=(-0.5, -0.0442125))
	
mdb.models['MM'].sketches['__profile__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['MM'].sketches['__profile__'].geometry[23])
	
mdb.models['MM'].sketches['__profile__'].ParallelConstraint(addUndoState=False, 
    entity1=mdb.models['MM'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['MM'].sketches['__profile__'].geometry[23])
	
mdb.models['MM'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].vertices[13], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[21])
	
mdb.models['MM'].sketches['__profile__'].Line(point1=(0.3624075, 0.0443625), 
    point2=(0.5, 0.0443625))
	
mdb.models['MM'].sketches['__profile__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['MM'].sketches['__profile__'].geometry[24])
	
mdb.models['MM'].sketches['__profile__'].PerpendicularConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].geometry[7], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[24])
	
mdb.models['MM'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].vertices[14], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[19])
	
mdb.models['MM'].sketches['__profile__'].Line(point1=(0.3624075, -0.0442125), 
    point2=(0.5, -0.0442125))
mdb.models['MM'].sketches['__profile__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['MM'].sketches['__profile__'].geometry[25])
	
mdb.models['MM'].sketches['__profile__'].ParallelConstraint(addUndoState=False, 
    entity1=mdb.models['MM'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['MM'].sketches['__profile__'].geometry[25])
	
mdb.models['MM'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].vertices[15], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[19])
	
mdb.models['MM'].rootAssembly.PartitionFaceBySketch(faces=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].faces.getSequenceFromMask(
    ('[#4 ]', ), ), sketch=mdb.models['MM'].sketches['__profile__'])
	
del mdb.models['MM'].sketches['__profile__']

mdb.models['MM'].ConstrainedSketch(gridSpacing=0.07, name='__profile__', 
    sheetSize=2.82, transform=
    mdb.models['MM'].rootAssembly.MakeSketchTransform(
    sketchPlane=mdb.models['MM'].rootAssembly.instances['NCPI-1'].faces[3], 
    sketchPlaneSide=SIDE1, sketchOrientation=RIGHT, origin=(0.5, 0.50007, 
    0.0)))
	
mdb.models['MM'].rootAssembly.projectReferencesOntoSketch(filter=COPLANAR_EDGES
    , sketch=mdb.models['MM'].sketches['__profile__'])
	
mdb.models['MM'].sketches['__profile__'].Line(point1=(-0.35355, 0.03543), 
    point2=(-0.351299732923508, 0.0442875))
	
mdb.models['MM'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].vertices[16], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[22])
	
mdb.models['MM'].sketches['__profile__'].undo()

mdb.models['MM'].sketches['__profile__'].Line(point1=(-0.35355, 0.03543), 
    point2=(-0.35355, 0.0442874999858439))
	
mdb.models['MM'].sketches['__profile__'].VerticalConstraint(addUndoState=False, 
    entity=mdb.models['MM'].sketches['__profile__'].geometry[34])
	
mdb.models['MM'].sketches['__profile__'].ParallelConstraint(addUndoState=False, 
    entity1=mdb.models['MM'].sketches['__profile__'].geometry[17], entity2=
    mdb.models['MM'].sketches['__profile__'].geometry[34])
	
mdb.models['MM'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].vertices[16], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[22])
	
mdb.models['MM'].sketches['__profile__'].Line(point1=(-0.35355, -0.03543), 
    point2=(-0.35355, -0.0442874999858439))
	
mdb.models['MM'].sketches['__profile__'].VerticalConstraint(addUndoState=False, 
    entity=mdb.models['MM'].sketches['__profile__'].geometry[35])
	
mdb.models['MM'].sketches['__profile__'].PerpendicularConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].geometry[16], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[35])
	
mdb.models['MM'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].vertices[17], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[7])
	
mdb.models['MM'].sketches['__profile__'].Line(point1=(0.35355, 0.03543), 
    point2=(0.35355, 0.0442874999858439))
	
mdb.models['MM'].sketches['__profile__'].VerticalConstraint(addUndoState=False, 
    entity=mdb.models['MM'].sketches['__profile__'].geometry[36])
	
mdb.models['MM'].sketches['__profile__'].PerpendicularConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].geometry[18], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[36])
	
mdb.models['MM'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].vertices[18], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[22])
	
mdb.models['MM'].sketches['__profile__'].Line(point1=(0.35355, -0.03543), 
    point2=(0.35355, -0.0442874999858439))
	
mdb.models['MM'].sketches['__profile__'].VerticalConstraint(addUndoState=False, 
    entity=mdb.models['MM'].sketches['__profile__'].geometry[37])
	
mdb.models['MM'].sketches['__profile__'].PerpendicularConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].geometry[16], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[37])
	
mdb.models['MM'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['MM'].sketches['__profile__'].vertices[19], 
    entity2=mdb.models['MM'].sketches['__profile__'].geometry[7])
	
mdb.models['MM'].rootAssembly.PartitionFaceBySketch(faces=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].faces.getSequenceFromMask(
    ('[#8 ]', ), ), sketch=mdb.models['MM'].sketches['__profile__'])
	
del mdb.models['MM'].sketches['__profile__']

mdb.models['MM'].rootAssembly.setMeshControls(regions=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].faces.getSequenceFromMask(
    ('[#1ff ]', ), ), technique=STRUCTURED)
	
mdb.models['MM'].rootAssembly.deleteSeeds(regions=(
    mdb.models['MM'].rootAssembly.instances['NCPI-1'], ))
	
mdb.models['MM'].rootAssembly.seedEdgeBySize(constraint=FINER, deviationFactor=
    0.1, edges=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].edges.getSequenceFromMask(
    ('[#4000000 ]', ), ), size=0.05)
	
mdb.models['MM'].rootAssembly.seedEdgeBySize(constraint=FINER, deviationFactor=
    0.1, edges=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].edges.getSequenceFromMask(
    ('[#4000000 ]', ), ), size=0.005)
	
mdb.models['MM'].rootAssembly.seedEdgeBySize(constraint=FINER, deviationFactor=
    0.1, edges=
    mdb.models['MM'].rootAssembly.instances['NCPI-1'].edges.getSequenceFromMask(
    ('[#8108000 ]', ), ), size=0.005)
	
mdb.models['MM'].rootAssembly.generateMesh(regions=(
    mdb.models['MM'].rootAssembly.instances['NCPI-1'], ))

